{"version":3,"sources":["stackable-bower.min.js","stackable-bower.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","Stackable","token","this","_token","_apiVersion","_apiUrl","value","callback","_get","err","res","containerId","itemId","data","_post","_put","path","endPoint","$","ajax","url","type","context","document","body","success","response","error","params","paramsStr","encodeURIComponent","window"],"mappings":"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","file":"stackable-bower.min.js","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Stackable = function () {\n    function Stackable(token) {\n        _classCallCheck(this, Stackable);\n\n        this._token = token;\n        this._apiVersion = 'v1';\n        this._apiUrl = 'https://api.stackable.space';\n    }\n\n    _createClass(Stackable, [{\n        key: 'getContainers',\n        value: function getContainers(callback) {\n            this._get('containers', function (err, res) {\n                callback(err, res);\n            });\n        }\n    }, {\n        key: 'getContainer',\n        value: function getContainer(containerId, callback) {\n            this._get('containers/' + containerId, function (err, res) {\n                callback(err, res);\n            });\n        }\n    }, {\n        key: 'getContainerItems',\n        value: function getContainerItems(containerId, callback) {\n            this._get('containers/' + containerId + '/items', function (err, res) {\n                callback(err, res);\n            });\n        }\n    }, {\n        key: 'getAllItems',\n        value: function getAllItems(callback) {\n            this._get('items', function (err, res) {\n                callback(err, res);\n            });\n        }\n    }, {\n        key: 'getItem',\n        value: function getItem(itemId, callback) {\n            this._get('items/' + itemId, function (err, res) {\n                callback(err, res);\n            });\n        }\n    }, {\n        key: 'createItem',\n        value: function createItem(containerId, data, callback) {\n            this._post('items', { containerId: containerId }, data, function (err, res) {\n                callback(err, res);\n            });\n        }\n    }, {\n        key: 'updateItem',\n        value: function updateItem(itemId, data, callback) {\n            this._put('items/' + itemId, data, function (err, res) {\n                callback(err, res);\n            });\n        }\n    }, {\n        key: '_get',\n        value: function _get(path, callback) {\n            var endPoint = this._apiUrl + '/' + this._apiVersion + '/' + path + '?token=' + this._token;\n\n            //is browser\n            $.ajax({\n                url: endPoint,\n                type: 'GET',\n                context: document.body,\n                success: function success(response) {\n                    callback(false, response);\n                },\n                error: function error(err) {\n                    callback(err, false);\n                }\n            });\n        }\n    }, {\n        key: '_post',\n        value: function _post(path, params, data, callback) {\n            var endPoint = this._apiUrl + '/' + this._apiVersion + '/' + path + '?token=' + this._token;\n\n            var paramsStr = '';\n            for (var key in params) {\n                if (paramsStr != '') {\n                    paramsStr += '&';\n                }\n                paramsStr += key + '=' + encodeURIComponent(params[key]);\n            }\n\n            if (paramsStr.length > 0) {\n                endPoint = endPoint + '&' + paramsStr;\n            }\n\n            //is browser\n            $.ajax({\n                url: endPoint,\n                type: 'POST',\n                context: document.body,\n                data: data,\n                success: function success(response) {\n                    callback(false, response);\n                },\n                error: function error(err) {\n                    callback(err, false);\n                }\n            });\n        }\n    }, {\n        key: '_put',\n        value: function _put(path, data, callback) {\n            var endPoint = this._apiUrl + '/' + this._apiVersion + '/' + path + '?token=' + this._token;\n\n            //is browser\n            $.ajax({\n                url: endPoint,\n                type: 'PUT',\n                context: document.body,\n                data: data,\n                success: function success(response) {\n                    callback(false, response);\n                },\n                error: function error(err) {\n                    callback(err, false);\n                }\n            });\n        }\n    }]);\n\n    return Stackable;\n}();\n\nwindow.Stackable = Stackable;","class Stackable {\n    constructor(token) {\n        this._token = token;\n        this._apiVersion = 'v1';\n        this._apiUrl = 'https://api.stackable.space';\n    }\n\n    getContainers(callback) {\n        this._get('containers', function(err, res) {\n            callback(err, res);\n        });\n    }\n\n    getContainer(containerId, callback) {\n        this._get(`containers/${containerId}`, function(err, res) {\n            callback(err, res);\n        });\n    }\n\n    getContainerItems(containerId, callback) {\n        this._get(`containers/${containerId}/items`, function(err, res) {\n            callback(err, res);\n        });\n    }\n\n    getAllItems(callback) {\n        this._get('items', function(err, res) {\n            callback(err, res);\n        });\n    }\n\n    getItem(itemId, callback) {\n        this._get(`items/${itemId}`, function(err, res) {\n            callback(err, res);\n        });\n    }\n\n    createItem(containerId, data, callback) {\n        this._post('items', {containerId}, data, function(err, res) {\n            callback(err, res);\n        });\n    }\n\n    updateItem(itemId, data, callback) {\n        this._put(`items/${itemId}`, data, function(err, res) {\n            callback(err, res);\n        });\n    }\n\n    _get(path, callback) {\n        let endPoint = `${this._apiUrl}/${this._apiVersion}/${path}?token=${this._token}`;\n\n        //is browser\n        $.ajax({\n            url: endPoint,\n            type: 'GET',\n            context: document.body,\n            success: function(response) {\n                callback(false, response);\n            },\n            error: function(err) {\n                callback(err, false);\n            }\n        });\n    }\n\n    _post(path, params, data, callback) {\n        let endPoint = `${this._apiUrl}/${this._apiVersion}/${path}?token=${this._token}`;\n\n        var paramsStr = '';\n        for (var key in params) {\n            if (paramsStr != '') {\n                paramsStr += '&';\n            }\n            paramsStr += key + '=' + encodeURIComponent(params[key]);\n        }\n\n        if (paramsStr.length > 0) {\n            endPoint = endPoint + '&' + paramsStr;\n        }\n\n        //is browser\n        $.ajax({\n            url: endPoint,\n            type: 'POST',\n            context: document.body,\n            data: data,\n            success: function(response) {\n                callback(false, response);\n            },\n            error: function(err) {\n                callback(err, false);\n            }\n        });\n    }\n\n    _put(path, data, callback) {\n        let endPoint = `${this._apiUrl}/${this._apiVersion}/${path}?token=${this._token}`;\n\n        //is browser\n        $.ajax({\n            url: endPoint,\n            type: 'PUT',\n            context: document.body,\n            data: data,\n            success: function(response) {\n                callback(false, response);\n            },\n            error: function(err) {\n                callback(err, false);\n            }\n        });\n    }\n}\n\nwindow.Stackable = Stackable;\n"],"sourceRoot":"/source/"}